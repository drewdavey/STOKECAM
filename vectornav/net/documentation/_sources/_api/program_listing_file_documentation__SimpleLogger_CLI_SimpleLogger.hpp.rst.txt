
.. _program_listing_file_documentation__SimpleLogger_CLI_SimpleLogger.hpp:

Program Listing for File CLI_SimpleLogger.hpp
=============================================

|exhale_lsh| :ref:`Return to documentation for file <file_documentation__SimpleLogger_CLI_SimpleLogger.hpp>` (``documentation\_SimpleLogger\CLI_SimpleLogger.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #ifndef __CLI_SIMPLELOGGER_HPP__
   #define __CLI_SIMPLELOGGER_HPP__
   
   #include "CLI_ByteBuffer.hpp"
   
   #pragma managed(push, off)
   #include "SimpleLogger.hpp"
   #pragma managed(pop)
   
   using namespace System;
   
   namespace VNSDK
   {
        class SimpleLogger
       {
       private:
           VN::SimpleLogger *_simpleLogger = nullptr;
           VN::Filesystem::FilePath *_filePath;
   
       public:
           
           SimpleLogger(ByteBuffer* bufferToLog, String *filePath)
           {
               marshal_context* context = gcnew marshal_context();
               _filePath = new VN::Filesystem::FilePath(context->marshal_as<const char*>(filePath));
               delete context;
   
               _simpleLogger = new VN::SimpleLogger(*(bufferToLog->GetReference()), *_filePath);
           }
   
           ~SimpleLogger()
           {
               delete _simpleLogger;
               delete _filePath;
           }
   
           bool Start()
           {
               return _simpleLogger->start();
           }
   
           void Stop()
           {
               _simpleLogger->stop();
           }
   
           bool IsLogging()
           {
               return _simpleLogger->isLogging();
           }
   
       }; //  class SimpleLogger
   } // namespace VNSDK
   #endif // __CLI_SIMPLELOGGER_HPP__
