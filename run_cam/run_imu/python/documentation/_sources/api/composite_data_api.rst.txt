
CompositeData
#############

.. py:class:: vnpy.CompositeData

  .. py:method:: matchesMessage(asciiHeader : vnpy.AsciiHeader) -> bool
    
    :returns headerMatches: Whether the passed header matches.
    
    Checks whether the passed register matches the header of the message which populated this object.
    
  .. py:method:: matchesMessage(binaryHeader : vnpy.BinaryHeader) -> bool
    :noindex:
    
    :returns headerMatches: Whether the passed header matches.
    
    Checks whether the passed register matches the header of the message which populated this object.
    
  .. py:method:: matchesMessage(binaryOutputRegister : vnpy.Registers.BinaryOutput) -> bool
    :noindex:
    
    :returns headerMatches: Whether the passed header matches.
    
    Checks whether the passed register matches the header of the message which populated this object.
    
  .. py:attribute:: time
    :type: TimeGroup
  .. py:attribute:: imu
    :type: ImuGroup
  .. py:attribute:: gnss
    :type: GnssGroup
  .. py:attribute:: attitude
    :type: AttitudeGroup
  .. py:attribute:: ins
    :type: InsGroup
  .. py:attribute:: gnss2
    :type: Gnss2Group
  .. py:attribute:: gnss3
    :type: Gnss3Group
  
TimeGroup
=========

  .. py:class:: TimeGroup
  
    .. py:attribute:: timeStartup
      :type: optional[vnpy.Time]
      
      The system time since startup measured in nano seconds.  The time since startup is based upon the internal TXCO oscillator for the MCU.  The accuracy of the internal TXCO is plus minus 20ppm (-40C to 85C).
      
    .. py:attribute:: timeGps
      :type: optional[vnpy.Time]
      
      The absolute GPS time since start of GPS epoch 1980 expressed in nano seconds.
      
    .. py:attribute:: timeGpsTow
      :type: optional[vnpy.Time]
      
      The time since the start of the current GPS time week expressed in nano seconds.
      
    .. py:attribute:: timeGpsWeek
      :type: optional[uint16_t]
      
      The current GPS week.
      
    .. py:attribute:: timeSyncIn
      :type: optional[vnpy.Time]
      
      The time since the last SyncIn event trigger expressed in nano seconds.
      
    .. py:attribute:: timeGpsPps
      :type: optional[vnpy.Time]
      
      The time since the last GPS PPS trigger event expressed in nano seconds.
      
    .. py:attribute:: timeUtc
      :type: optional[vnpy.TimeUtc]
      
      The current UTC time.  The year is given as a signed byte year offset from the year 2000.  For example the year 2013 would be given as year 13.
      
    .. py:attribute:: syncInCnt
      :type: optional[uint32_t]
      
      The number of SyncIn trigger events that have occurred.
      
    .. py:attribute:: syncOutCnt
      :type: optional[uint32_t]
      
      The number of SyncOut trigger events that have occurred.
      
    .. py:attribute:: timeStatus
      :type: optional[vnpy.TimeStatus]
      
      Time valid status flags.
      
  
ImuGroup
========

  .. py:class:: ImuGroup
  
    .. py:attribute:: imuStatus
      :type: optional[vnpy.ImuStatus]
      
      Reports various statuses of the IMU sensors.
      
    .. py:attribute:: uncompMag
      :type: optional[vnpy.Vec3f]
      
      The IMU magnetic field given in the body-frame.  This measurement is compensated by the static calibration (individual factory calibration stored in flash), and the user compensation, however it is not compensated by the onboard Hard/Soft Iron estimator.
      
    .. py:attribute:: uncompAccel
      :type: optional[vnpy.Vec3f]
      
      The IMU acceleration given in the body-frame.  This measurement is compensated by the static calibration (individual factory calibration stored in flash), however it is not compensated by any bias compensation from the onboard Kalman filter.
      
    .. py:attribute:: uncompGyro
      :type: optional[vnpy.Vec3f]
      
      The IMU angular rate given in the body-frame.  This measurement is compensated by the static calibration (individual factory calibration stored in flash), however it is not compensated by any bias compensation from the onboard Kalman filter.
      
    .. py:attribute:: temperature
      :type: optional[float]
      
      The IMU temperature.
      
    .. py:attribute:: pressure
      :type: optional[float]
      
      The IMU pressure.  This is an absolute pressure measurement.  Typical pressure at sea level would be around 100 kPa.
      
    .. py:attribute:: deltaTheta
      :type: optional[DeltaTheta]
      
      The delta theta is the delta rotation angles incurred due to rotation, since the last time the values were output by the device. The delta angles are calculated based upon the onboard conning and sculling integration performed onboard the sensor at the IMU sampling rate. The delta time is the time interval that the delta angle and velocities are integrated over. The integration for the delta angles are reset each time the values are either polled or sent out due to a scheduled asynchronous ASCII or binary output.
      
    .. py:attribute:: deltaVel
      :type: optional[vnpy.Vec3f]
      
      The delta velocity is the delta velocity incurred due to motion, since the last time the values were output by the device. The delta velocities are calculated based upon the onboard conning and sculling integration performed onboard the sensor at the IMU sampling rate. The integration for the delta velocities are reset each time the values are either polled or sent out due to a scheduled asynchronous ASCII or binary output.
      
    .. py:attribute:: mag
      :type: optional[vnpy.Vec3f]
      
      The IMU compensated magnetic field given in the body-frame.  This measurement is compensated by the static calibration (individual factory calibration stored in flash), the user compensation, and the dynamic calibration from the onboard Hard/Soft Iron estimator.
      
    .. py:attribute:: accel
      :type: optional[vnpy.Vec3f]
      
      The bias-compensated acceleration measured in the body-frame. This measurement is compensated by the static calibration (individual factory calibration stored in flash), the user compensation, and the dynamic bias compensation from the onboard Kalman filter (if applicable).
      
    .. py:attribute:: angularRate
      :type: optional[vnpy.Vec3f]
      
      The bias-compensated angular rate measured in the body-frame.  This measurement is compensated by the static calibration (individual factory calibration stored in flash), the user compensation, and the dynamic bias compensation from the onboard Kalman filter.
      
    .. py:attribute:: sensSat
      :type: optional[uint16_t]
      
      This field provides flags identifying whether any of the measurements are currently saturated.
      
  
GnssGroup
=========

  .. py:class:: GnssGroup
  
    .. py:attribute:: gnss1TimeUtc
      :type: optional[vnpy.GnssTimeUtc]
      
      The current UTC time.  The year is given as a signed byte year offset from the year 2000.  For example the year 2013 would be given as year 13.
      
    .. py:attribute:: gps1Tow
      :type: optional[vnpy.Time]
      
      The GPS time of week given in nano seconds.
      
    .. py:attribute:: gps1Week
      :type: optional[uint16_t]
      
      The current GPS week.
      
    .. py:attribute:: gnss1NumSats
      :type: optional[uint8_t]
      
      The number of tracked GNSS satellites.
      
    .. py:attribute:: gnss1Fix
      :type: optional[uint8_t]
      
      The current GNSS fix.
      
    .. py:attribute:: gnss1PosLla
      :type: optional[vnpy.Lla]
      
      The current GNSS position measurement given as the geodetic latitude, longitude and altitude above the ellipsoid.
      
    .. py:attribute:: gnss1PosEcef
      :type: optional[vnpy.Vec3d]
      
      The current GNSS position given in the Earth centered Earth fixed (ECEF) reference frame.
      
    .. py:attribute:: gnss1VelNed
      :type: optional[vnpy.Vec3f]
      
      The current GNSS velocity in the North East Down (NED) reference frame.
      
    .. py:attribute:: gnss1VelEcef
      :type: optional[vnpy.Vec3f]
      
      The current GNSS velocity in the Earth centered Earth fixed (ECEF) reference frame.
      
    .. py:attribute:: gnss1PosUncertainty
      :type: optional[vnpy.Vec3f]
      
      The current GNSS position uncertainty in the North East Down (NED) reference frame.
      
    .. py:attribute:: gnss1VelUncertainty
      :type: optional[float]
      
      The current GNSS velocity uncertainty.
      
    .. py:attribute:: gnss1TimeUncertainty
      :type: optional[float]
      
      The current GPS time uncertainty.
      
    .. py:attribute:: gnss1TimeInfo
      :type: optional[vnpy.GnssTimeInfo]
      
      Flags for valid GPS TOW, week number and UTC and current leap seconds.
      
    .. py:attribute:: gnss1Dop
      :type: optional[vnpy.GnssDop]
      
      Dilution of precision.
      
    .. py:attribute:: gnss1SatInfo
      :type: optional[vnpy.GnssSatInfo]
      
      Information and measurements pertaining to each GNSS satellite in view.
      
    .. py:attribute:: gnss1RawMeas
      :type: optional[vnpy.GnssRawMeas]
      
      Raw measurements pertaining to each GNSS satellite in view.
      
    .. py:attribute:: gnss1Status
      :type: optional[vnpy.GnssStatus]
      
      GNSS Status info flags.
      
    .. py:attribute:: gnss1AltMSL
      :type: optional[double]
      
      Altitude (Mean Sea Level).
      
  
AttitudeGroup
=============

  .. py:class:: AttitudeGroup
  
    .. py:attribute:: ypr
      :type: optional[vnpy.Ypr]
      
      The estimated attitude describing the body frame with respect to the local North-East-Down (NED) frame given as the (3-2-1) set of Euler angles corresponding to Yaw-Pitch-Roll.
      
    .. py:attribute:: quaternion
      :type: optional[vnpy.Quat]
      
      The estimated attitude describing the body frame with respect to the local North-East-Down (NED) frame given as the quaternion.
      
    .. py:attribute:: dcm
      :type: optional[vnpy.Mat3f]
      
      The estimated attitude given as the directional cosine matrix (DCM) in column major order mapping the local North-East-Down (NED) frame into the body frame.
      
    .. py:attribute:: magNed
      :type: optional[vnpy.Vec3f]
      
      The current estimated magnetic field given in the local North-East-Down (NED) frame.
      
    .. py:attribute:: accelNed
      :type: optional[vnpy.Vec3f]
      
      The estimated acceleration (with gravity) given in the local North-East-Down (NED) frame.
      
    .. py:attribute:: linBodyAcc
      :type: optional[vnpy.Vec3f]
      
      The estimated linear acceleration (without gravity) given in the body frame.
      
    .. py:attribute:: linAccelNed
      :type: optional[vnpy.Vec3f]
      
      The estimated linear acceleration (without gravity) given in the local North-East-Down (NED) frame.
      
    .. py:attribute:: yprU
      :type: optional[vnpy.Vec3f]
      
      The estimated attitude (Yaw, Pitch, Roll) uncertainty (1 Sigma), reported in degrees.
      
    .. py:attribute:: heave
      :type: optional[vnpy.Vec3f]
      
      Real-time heave and heave-rate estimates, plus a delayed-heave estimate.
      
    .. py:attribute:: attU
      :type: optional[float]
      
      The estimated uncertainty (1 Sigma) in the current attitude estimate.
      
  
InsGroup
========

  .. py:class:: InsGroup
  
    .. py:attribute:: insStatus
      :type: optional[vnpy.InsStatus]
      
      The INS status bitfield.
      
    .. py:attribute:: posLla
      :type: optional[vnpy.Lla]
      
      The estimated position given as latitude, longitude, and altitude.
      
    .. py:attribute:: posEcef
      :type: optional[vnpy.Vec3d]
      
      The estimate position given in the Earth centered Earth fixed (ECEF) frame.
      
    .. py:attribute:: velBody
      :type: optional[vnpy.Vec3f]
      
      The estimated velocity in the body-frame.
      
    .. py:attribute:: velNed
      :type: optional[vnpy.Vec3f]
      
      The estimated velocity in the North East Down (NED) frame.  
      
    .. py:attribute:: velEcef
      :type: optional[vnpy.Vec3f]
      
      The estimated velocity in the Earth centered Earth fixed (ECEF) frame. 
      
    .. py:attribute:: magEcef
      :type: optional[vnpy.Vec3f]
      
      The compensated magnetic measurement in the Earth centered Earth fixed (ECEF) frame.
      
    .. py:attribute:: accelEcef
      :type: optional[vnpy.Vec3f]
      
      The estimated acceleration (with gravity) given in the Earth centered Earth fixed (ECEF) frame. The acceleration measurement has been bias compensated by the onboard INS filter. This measurement is attitude dependent because the attitude is used to map the measurement from the body-frame into the inertial (ECEF) frame. If the device is stationary and the INS filter is tracking, the measurement should be nominally equivalent to the gravity reference vector in the inertial frame (ECEF).
      
    .. py:attribute:: linAccelEcef
      :type: optional[vnpy.Vec3f]
      
      The estimated linear acceleration (without gravity) and given in the Earth centered Earth fixed (ECEF) frame. This measurement is attitude dependent as the attitude solution is used to map the measurement from the body-frame into the inertial (ECEF) frame. This acceleration measurement has been bias compensated by the onboard INS filter, and the gravity component has been removed using the current gravity reference vector estimate. If the device is stationary and the onboard INS filter is tracking, the measurement will nominally read 0 on all three axes.
      
    .. py:attribute:: posU
      :type: optional[float]
      
      The estimated uncertainty (1 Sigma) in the current position estimate.
      
    .. py:attribute:: velU
      :type: optional[float]
      
      The estimated uncertainty (1 Sigma) in the current velocity estimate.
      
  
Gnss2Group
==========

  .. py:class:: Gnss2Group
  
    .. py:attribute:: gnss2TimeUtc
      :type: optional[vnpy.GnssTimeUtc]
      
      The current UTC time.  The year is given as a signed byte year offset from the year 2000.  For example the year 2013 would be given as year 13.
      
    .. py:attribute:: gps2Tow
      :type: optional[vnpy.Time]
      
      The GPS time of week given in nano seconds.
      
    .. py:attribute:: gps2Week
      :type: optional[uint16_t]
      
      The current GPS week.
      
    .. py:attribute:: gnss2NumSats
      :type: optional[uint8_t]
      
      The number of tracked GNSS satellites.
      
    .. py:attribute:: gnss2Fix
      :type: optional[uint8_t]
      
      The current GNSS fix.
      
    .. py:attribute:: gnss2PosLla
      :type: optional[vnpy.Lla]
      
      The current GNSS position measurement given as the geodetic latitude, longitude and altitude above the ellipsoid.
      
    .. py:attribute:: gnss2PosEcef
      :type: optional[vnpy.Vec3d]
      
      The current GNSS position given in the Earth centered Earth fixed (ECEF) reference frame.
      
    .. py:attribute:: gnss2VelNed
      :type: optional[vnpy.Vec3f]
      
      The current GNSS velocity in the North East Down (NED) reference frame.
      
    .. py:attribute:: gnss2VelEcef
      :type: optional[vnpy.Vec3f]
      
      The current GNSS velocity in the Earth centered Earth fixed (ECEF) reference frame.
      
    .. py:attribute:: gnss2PosUncertainty
      :type: optional[vnpy.Vec3f]
      
      The current GNSS position uncertainty in the North East Down (NED) reference frame.
      
    .. py:attribute:: gnss2VelUncertainty
      :type: optional[float]
      
      The current GNSS velocity uncertainty.
      
    .. py:attribute:: gnss2TimeUncertainty
      :type: optional[float]
      
      The current GPS time uncertainty.
      
    .. py:attribute:: gnss2TimeInfo
      :type: optional[vnpy.GnssTimeInfo]
      
      Flags for valid GPS TOW, week number and UTC and current leap seconds.
      
    .. py:attribute:: gnss2Dop
      :type: optional[vnpy.GnssDop]
      
      Dilution of precision.
      
    .. py:attribute:: gnss2SatInfo
      :type: optional[vnpy.GnssSatInfo]
      
      Information and measurements pertaining to each GNSS satellite in view.
      
    .. py:attribute:: gnss2RawMeas
      :type: optional[vnpy.GnssRawMeas]
      
      Raw measurements pertaining to each GNSS satellite in view.
      
    .. py:attribute:: gnss2Status
      :type: optional[vnpy.GnssStatus]
      
      GNSS Status info flags.
      
    .. py:attribute:: gnss2AltMSL
      :type: optional[double]
      
      Altitude (Mean Sea Level).
      
  
Gnss3Group
==========

  .. py:class:: Gnss3Group
  
    .. py:attribute:: gnss3TimeUtc
      :type: optional[vnpy.GnssTimeUtc]
      
      The current UTC time.  The year is given as a signed byte year offset from the year 2000.  For example the year 2013 would be given as year 13.
      
    .. py:attribute:: gps3Tow
      :type: optional[vnpy.Time]
      
      The GPS time of week given in nano seconds.
      
    .. py:attribute:: gps3Week
      :type: optional[uint16_t]
      
      The current GPS week.
      
    .. py:attribute:: gnss3NumSats
      :type: optional[uint8_t]
      
      The number of tracked GNSS satellites.
      
    .. py:attribute:: gnss3Fix
      :type: optional[uint8_t]
      
      The current GNSS fix.
      
    .. py:attribute:: gnss3PosLla
      :type: optional[vnpy.Lla]
      
      The current GNSS position measurement given as the geodetic latitude, longitude and altitude above the ellipsoid.
      
    .. py:attribute:: gnss3PosEcef
      :type: optional[vnpy.Vec3d]
      
      The current GNSS position given in the Earth centered Earth fixed (ECEF) reference frame.
      
    .. py:attribute:: gnss3VelNed
      :type: optional[vnpy.Vec3f]
      
      The current GNSS velocity in the North East Down (NED) reference frame.
      
    .. py:attribute:: gnss3VelEcef
      :type: optional[vnpy.Vec3f]
      
      The current GNSS velocity in the Earth centered Earth fixed (ECEF) reference frame.
      
    .. py:attribute:: gnss3PosUncertainty
      :type: optional[vnpy.Vec3f]
      
      The current GNSS position uncertainty in the North East Down (NED) reference frame.
      
    .. py:attribute:: gnss3VelUncertainty
      :type: optional[float]
      
      The current GNSS velocity uncertainty.
      
    .. py:attribute:: gnss3TimeUncertainty
      :type: optional[float]
      
      The current GPS time uncertainty.
      
    .. py:attribute:: gnss3TimeInfo
      :type: optional[vnpy.GnssTimeInfo]
      
      Flags for valid GPS TOW, week number and UTC and current leap seconds.
      
    .. py:attribute:: gnss3Dop
      :type: optional[vnpy.GnssDop]
      
      Dilution of precision.
      
    .. py:attribute:: gnss3SatInfo
      :type: optional[vnpy.GnssSatInfo]
      
      Information and measurements pertaining to each GNSS satellite in view.
      
    .. py:attribute:: gnss3RawMeas
      :type: optional[vnpy.GnssRawMeas]
      
      Raw measurements pertaining to each GNSS satellite in view.
      
    .. py:attribute:: gnss3Status
      :type: optional[vnpy.GnssStatus]
      
      GNSS Status info flags.
      
    .. py:attribute:: gnss3AltMSL
      :type: optional[double]
      
      Altitude (Mean Sea Level).
      
  
